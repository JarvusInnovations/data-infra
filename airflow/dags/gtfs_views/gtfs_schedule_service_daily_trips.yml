operator: operators.SqlToWarehouseOperator
dst_table_name: "views.gtfs_schedule_service_daily_trips"
dependencies:
  - gtfs_schedule_service_daily

sql: |
  # Each trip with scheduled service on a date, augmented with route_id, first departure,
  # and last arrival timestamps.
  #
  WITH
  daily_service_trips AS (
    SELECT
      t1.*
      , t2.trip_id
      , t2.route_id
    FROM `{{ "views.gtfs_schedule_service_daily" | table }}` t1
    JOIN `{{ "gtfs_schedule_type2.trips" | table }}` t2
      USING (calitp_itp_id, calitp_url_number, service_id)
    WHERE
      t2.calitp_extracted_at <= t1.service_date
      AND COALESCE(t2.calitp_deleted_at, DATE("2099-01-01")) > t1.service_date
  ),
  stop_time_update_dates AS (
    SELECT calitp_extracted_at AS updated_at FROM `{{ "views.gtfs_schedule_stop_times" | table }}`
    UNION DISTINCT
    SELECT calitp_deleted_at FROM `{{ "views.gtfs_schedule_stop_times" | table }}`
  ),
  service_dates AS (
    (SELECT DISTINCT service_date FROM `{{ "views.gtfs_schedule_service_daily" | table }}`)
  ),
  trip_summary AS (
    SELECT
      t1.calitp_itp_id
      , t1.calitp_url_number
      , t1.trip_id
      , t2.service_date
      , COUNT(DISTINCT t1.stop_id) AS n_stops
      , COUNT(*) AS n_stop_times
      , MIN(t1.departure_ts) AS trip_first_departure_ts
      , MAX(t1.arrival_ts) AS trip_last_arrival_ts
    FROM `{{ "views.gtfs_schedule_stop_times" | table }}` t1
    JOIN  service_dates t2
    ON t1.calitp_extracted_at <= t2.service_date
      AND COALESCE(t1.calitp_deleted_at, DATE("2099-01-01")) > t2.service_date
    GROUP BY 1, 2, 3, 4
  )

  SELECT
    t1.*
    , t2.* EXCEPT(calitp_itp_id, calitp_url_number, trip_id, service_date)
    , (t2.trip_last_arrival_ts - t2.trip_first_departure_ts) / 3600 AS service_hours
  FROM daily_service_trips t1
  JOIN trip_summary t2
    USING(calitp_itp_id, calitp_url_number, trip_id, service_date)
